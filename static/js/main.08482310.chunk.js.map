{"version":3,"sources":["components/NavBar.js","components/Header.js","components/ImageCard.js","static/projects.js","components/ProjectCards.js","pages/LandingPage.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","alignItems","fontFamily","appBar","background","icon","color","fontSize","appBarTitle","flexGrow","appBarWrapper","width","margin","title","breakpoints","down","NavBar","classes","className","id","AppBar","elevation","Toolbar","to","style","textDecoration","IconButton","height","container","textAlign","subtitle","fontWeight","goDown","Header","useState","startAnim","setStartAnim","useEffect","Collapse","in","timeout","collapsedHeight","smooth","duration","offset","maxWidth","transition","media","desc","cardHovered","transform","wrapper","minHeight","ImageCard","project","raised","shadow","state","setState","useInView","threshold","triggerOnce","ref","inView","entry","time","Card","onMouseOver","onMouseOut","zdepth","CardMedia","image","imageUrl","CardContent","Typography","gutterBottom","variant","component","projects","link","flexWrap","flexDirection","ProjectCards","map","index","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundAttachment","spacer","LandingPage","App","CssBaseline","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08482310.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { AppBar, IconButton, Toolbar } from \"@material-ui/core\";\nimport SortIcon from '@material-ui/icons/Sort';\nimport {Link} from \"react-router-dom\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    //navbar + title area\n    root:{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: 'Roboto',\n    },\n\n    appBar: {\n        background: 'rgba(20,20,20,1)',\n    },\n\n    //menu icon\n    icon: {\n        color: '#fff',\n        fontSize: \"2rem\"\n    },\n\n    appBarTitle: {\n        flexGrow:'1'\n    },\n\n    appBarWrapper:{\n        width: '80%',\n        margin: '0 auto'\n    },\n\n    title: {\n        color: '#fff',\n        fontSize:'4.5rem',\n        [theme.breakpoints.down(\"sm\")]:{    //switch font size when medium screen width (960px) detected\n            fontSize:\"3rem\",\n        },\n        padding: \"1rem\",\n\n    },\n\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root} id=\"header\">\n        <AppBar className={classes.appBar} elevation={0}>\n            <Toolbar className={classes.appBarWrapper}>\n                <Link to=\"/\" style={{textDecoration: 'none', color: 'inherit'}} className={classes.appBarTitle}>\n                    <h1>Colton Glick</h1>\n                </Link>\n                <IconButton>\n                    <SortIcon className={classes.icon}/>\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Collapse, IconButton } from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Link as Scroll } from 'react-scroll'\n\n\nconst useStyles = makeStyles((theme) => ({\n    //navbar + title area\n    root:{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height:'100vh',\n        fontFamily: 'Roboto',\n    },\n\n    //for title\n    container:{\n        textAlign: 'center',\n    },\n\n    title: {\n        color: '#fff',\n        fontSize:'4.5rem',\n        [theme.breakpoints.down(\"sm\")]:{    //switch font size when medium screen width (960px) detected\n            fontSize:\"3rem\",\n        },\n        padding: \"1rem\",\n\n    },\n\n    subtitle:{\n        fontWeight: '100',\n    },\n\n    //down arrow icon\n    goDown: {\n        color: '#fff',\n        fontSize: \"5rem\"\n    }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  //animation for title\n  const [startAnim, setStartAnim] = useState(false);\n  useEffect(()=>{\n    setStartAnim(true);\n  },[]);\n\n  return (\n    <div className={classes.root} id=\"header\">\n        <Collapse in={startAnim} {...(startAnim ? { timeout: 1000 } : {})} \n        collapsedHeight={50}>\n            <div className={classes.container}>\n                <h1 className={classes.title}>\n                    Colton Glick<br /> \n                    <span className={classes.subtitle}>\n                        Software Engineer\n                    </span>\n                </h1>\n                <Scroll to=\"projectCards\" smooth={true} duration={500} offset={-80}>\n                    <IconButton>\n                        <ExpandMoreIcon className={classes.goDown} />\n                    </IconButton>\n                </Scroll>\n            </div>\n        </Collapse>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Collapse } from '@material-ui/core';\nimport { useInView } from 'react-intersection-observer'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 645,\n    background:\"rgba(0,0,0,0.5)\",\n    margin: \"20px\",\n    transition: \"transform 0.15s ease-in-out\"     //for zoom on hover\n  },\n\n  media: {\n    height: 440,\n  },\n\n  title: {\n    fontFamily: 'Roboto',\n    fontWeight: \"bold\",\n    fontSize: \"2rem\",\n    color: \"#fff\",\n  },\n\n  desc:{\n    fontFamily: 'Roboto',\n    fontSize: \"1rem\",\n    color: \"#ddd\",\n  },\n\n  cardHovered:{\n    transform: \"scale3d(1.05, 1.05, 1)\"       //enlarge card when hovering over it\n  },\n\n  wrapper:{\n      minHeight:500     //ensures wrapper is appropriate size for beginning display animation\n  }\n});\n\nexport default function ImageCard({ project }) {\n  const classes = useStyles();\n  const [state, setState] = useState({    //state for zoom on hover\n    raised:false,\n    shadow:1,\n  });\n  \n  //control display effect\n  const { ref, inView, entry } = useInView({\n      threshold: 0.65,     //percent of reference div that needs to be visible to show card\n      triggerOnce: true,  \n  });\n\n  return (\n    <div ref={ref} className={classes.wrapper}>   \n    {/* wrapper around card to detect if it's on screen and needs to be shown, read from inView */}\n        <Collapse in={inView} \n        {...(inView ? { timeout: project.time } : {})} >    \n            <Card className={classes.root} classes={{root: state.raised ? classes.cardHovered : \"\"}}\n            onMouseOver={()=>setState({ raised: true, shadow:3})} \n            onMouseOut={()=>setState({ raised:false, shadow:1 })} \n            raised={state.raised} zdepth={state.shadow}>\n                <CardMedia\n                className={classes.media}\n                image= {project.imageUrl}\n                title={project.title}\n                />\n                <CardContent>\n                  <Typography \n                      gutterBottom \n                      variant=\"h5\" \n                      component=\"h2\" \n                      className={classes.title}>\n                      {project.title}\n                  </Typography>\n                  <Typography \n                      variant=\"body2\" \n                      color=\"textSecondary\" \n                      component=\"p\"\n                      className={classes.desc} >\n                      {project.desc}\n                  </Typography>\n                </CardContent>\n            </Card>\n        </Collapse>\n    </div>\n  );\n}","/**\n * This file defines the project cards to display on the landing page. \n * Simple add a new entry to this array to add a new card to the landing page.\n * A new project page to link to will also be needed.\n * \n * title: The large text to be displayed on the card\n * desc: The small text under the title briefly describing the project \n * imageUrl: The location of the image to display in the card, always \n *      append \"process.env.PUBLIC_URL\" to the beginning. Path starts in the public folder\n * time: The time in milliseconds this card takes to run the display animation\n * link: TODO\n */\n\n\nconst projects=[\n    {\n        title:\"test project 1\",\n        desc:\"this is the first index in my projects list blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/test.jpg\",\n        time: 800,\n        link: \"/test1\",\n    },\n    {\n        title:\"test project 2\",\n        desc:\"second index blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/oldtest.jpg\",\n        time: 800,\n        link: \"/test2\",\n    },\n    {\n        title:\"test project 3\",\n        desc:\"second index blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/test.jpg\",\n        time: 800,\n        link: \"/test3\",\n    },\n    {\n        title:\"test project 4\",\n        desc:\"second index blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/oldtest.jpg\",\n        time: 800,\n        link: \"/test4\",\n    },\n    {\n        title:\"test project 5\",\n        desc:\"second index blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/oldtest.jpg\",\n        time: 800,\n        link: \"/test5\",\n    },\n    {\n        title:\"test project 6\",\n        desc:\"second index blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/oldtest.jpg\",\n        time: 800,\n        link: \"/test6\",\n    },\n    {\n        title:\"test project 7\",\n        desc:\"second index blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah \",\n        imageUrl: process.env.PUBLIC_URL + \"/img/oldtest.jpg\",\n        time: 800,\n        link: \"/test7\",\n    },\n]\n\nexport default projects;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageCard from './ImageCard';\nimport projects from \"../static/projects\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        minHeight:\"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        [theme.breakpoints.down(\"md\")]:{    //switch to column flex direction when medium screen width (960px) or below detected\n            flexDirection:\"column\",\n        }\n    }\n}));\nexport default function ProjectCards(){\n    const classes = useStyles();\n    return(\n        <div className={classes.root} id=\"projectCards\">\n            {/* map each element in the projects.js file to an ImageCard */}\n                {projects.map((project, index) => \n                <Link to={project.link} style={{textDecoration: 'none', color: 'inherit'}}>\n                    <ImageCard project={project}/>\n                </Link>\n                )}\n        </div>\n    );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Header from \"../components/Header\";\nimport ProjectCards from \"../components/ProjectCards\";\n\nconst useStyles = makeStyles((theme) => ({\n  //styling for root div, including size and background image\n  root: {\n    minHeight:\"100vh\",\n    backgroundImage: 'url(/img/oldtest.jpg)',\n    backgroundSize: \"cover\",\n    backgroundRepeat:\"no-repeat\",\n    backgroundPosition:\"center\",\n    backgroundAttachment:\"fixed\",       //image does not scroll with page\n    //TODO: need to fix white bar under background image when scrolling on chrome android\n  },\n\n  spacer:{\n    height: \"20vh\",\n  }\n\n}));\n\nexport default function LandingPage() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {/* nav bar and title */}\n      <Header />\n      <ProjectCards />\n      {/* spacer at the bottom of the page for breathing room */}\n      <div className={classes.spacer}></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { CssBaseline } from \"@material-ui/core\";\nimport NavBar from \"./components/NavBar\"\n\nimport {Route, Switch} from \"react-router-dom\"\nimport LandingPage from \"./pages/LandingPage\"\nimport AboutPage from \"./pages/AboutPage\"\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <CssBaseline />\n      <NavBar />\n      <Switch>  {/* renders only on of the following components */}\n        <Route exact path=\"/\"><LandingPage /></Route>\n        <Route path=\"/about\"><AboutPage /></Route>\n        <Route path=\"/:id\">\n          <h1>404</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}